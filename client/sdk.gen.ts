// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type Composable, type Client, type TDataShape, formDataBodySerializer } from './client';
import type { PostTagByFrontendResponse, PostTagByFrontendData, PutTagByFrontendData, PostSysConfigData, PutSysConfigData, BulkGetConfigValueResponse, BulkGetConfigValueData, UpdateConfigsData, ListSmsTemplatesResponse, ListSmsTemplatesData, SaveSmsTemplateData, UpdateSmsTemplateData, PostSalesAgentData, PutSalesAgentData, ToggleConversationTopData, MarkConversationStarData, PostCustomerData, PutCustomerData, ListPromotersResponse, ListPromotersData, PutPromoterData, MarkAsReadByCheckpointData, ListQuickRepliesResponse, ListQuickRepliesData, AddQuickReplyData, UpdateQuickReplyData, MarkConversationAsUnreadData, MarkConversationAsReadData, CreateVisitPlanData, UpdateVisitPlanData, DeleteCustomerGroupData, UpdateCustomerGroupData, CreateFollowUpRecordData, UpdateFollowUpRecordData, PostData, PutData, Put1Data, PostUserData, PutUserData, ReviewUserAuthData, PostTagResponse, PostTagData, PutTagData, PatchStaffData, PostStaffData, PutStaffData, PostShortVideoRecordData, PutShortVideoRecordData, PostShortVideoImpressionData, PutShortVideoImpressionData, PostShortVideoFansData, PutShortVideoFansData, PostShortVideoAccountData, PutShortVideoAccountData, PostRoleData, PutRoleData, PostReportByAdminData, PutReportByAdminData, PostPaymentRecordData, PutPaymentRecordData, CreateOfflineOrderResponse, CreateOfflineOrderData, PutOrderData, DeleteMenuByIdsResponse, DeleteMenuByIdsData, PatchMenuData, PostMenuData, PutMenuData, PostSubscriptionData, PutSubscriptionData, PostKeywordData, PutKeywordData, PostKeywordUsageData, PutKeywordUsageData, PostKeywordBlacklistData, PutKeywordBlacklistData, PostRawContentData, PutRawContentData, PostCollectorData, PutCollectorData, PostExhibitionData, PutExhibitionData, PostContentData, PutContentData, PostTreeOptionData, PutTreeOptionData, PostCommissionSettlementData, PutCommissionSettlementData, PostCommissionRecordData, PutCommissionRecordData, PutCommentData, PostLinkData, PutLinkData, CreateArticleByAdminData, UpdateArticleByAdminData, PatchArticleCategoryEnabledData, PostArticleCategoryData, PutArticleCategoryData, PostBenefitData, PutBenefitData, PostProductData, PutProductData, PostAppVersionData, PutAppVersionData, CreateAgentData, UpdateAgentProfileData, ResetPasswordData, RegisterUserResponse, RegisterUserData, LoginUserResponse, LoginUserData, ForgetPasswordData, BindBenefitDeviceData, MarkUidInvalidData, ListShortVideoRecordsResponse, ListShortVideoRecordsData, CreateShortVideoRecordData, ListPushRecordsResponse, ListPushRecordsData, CreatePushRecordData, UpdateSessionDeviceData, SubmitUserAuthData, GetUserAnnotationResponse, GetUserAnnotationData, SetUserAnnotationData, UnfollowUserData, FollowUserData, UnblockUserData, BlockUserData, HandlePaymentCallbackResponse, HandlePaymentCallbackData, RemoveTagFromObjectByFrontendData, AddTagToObjectByFrontendData, ListTagPickerItemsByFrontendResponse, ListTagPickerItemsByFrontendData, ListTagsByObjectIdByFrontendResponse, ListTagsByObjectIdByFrontendData, ListConfigsBySingleResponse, ListConfigsBySingleData, ListConfigsResponse, ListConfigsData, AddShortVideoImpressionRecordData, AddShortVideoFansRecordData, ListSalesAgentResponse, ListSalesAgentData, ListConversationsBySalesResponse, ListConversationsBySalesData, CreateConversationResponse, CreateConversationData, BulkReassignCustomersData, SyncPotentialCustomersData, PageCustomersResponse, PageCustomersData, AssignCustomerToAgentData, PostReportData, InvitePromoterData, BindPromoterResponse, BindPromoterData, PostRawContent1Data, AddBrowsingHistoryData, PostOperationLogData, SendResponse, SendData, ListConversationsResponse, ListConversationsData, CreatePrivateConversationResponse, CreatePrivateConversationData, SendInboxMessageData, SendMessageResponse, SendMessageData, ListPreciseMdmCompaniesResponse, ListPreciseMdmCompaniesData, MatchBossInContactsResponse, MatchBossInContactsData, ListGlobalMdmCompaniesResponse, ListGlobalMdmCompaniesData, AuthorizeShortVideoAccountData, DeleteCustomerByIdsData, ListPageCustomersResponse, ListPageCustomersData, UpdateCustomerGroup1Data, CreateCustomerData, ListCustomerGroupsResponse, ListCustomerGroupsData, CreateCustomerGroupData, ReplyCommentData, PostCommentData, ListUsersByAdminResponse, ListUsersByAdminData, ListOrderResponse, ListOrderData, RemoveTagFromObjectData, AddTagToObjectData, ListTagPickerItemsResponse, ListTagPickerItemsData, ListTagsByObjectIdResponse, ListTagsByObjectIdData, ListTagsResponse, ListTagsData, ListStaffsResponse, ListStaffsData, BulkPostStaffsData, PageSeedItemsResponse, PageSeedItemsData, ImportSeedItemsResponse, ImportSeedItemsData, ListShortVideoRecordResponse, ListShortVideoRecordData, ListShortVideoImpressionResponse, ListShortVideoImpressionData, ListShortVideoFansResponse, ListShortVideoFansData, ListShortVideoAccountResponse, ListShortVideoAccountData, ListRoleResponse, ListRoleData, ListReportsByAdminResponse, ListReportsByAdminData, ListPromoters1Response, ListPromoters1Data, ListPaymentRecordResponse, ListPaymentRecordData, MarkAsPaidData, RefundOrderData, ListOrder1Response, ListOrder1Data, SortableMenuData, ListStaffResponse, ListStaffData, ListSubscriptionResponse, ListSubscriptionData, ListOperationLogResponse, ListOperationLogData, ListKeywordResponse, ListKeywordData, ListKeywordUsageResponse, ListKeywordUsageData, ListKeywordBlacklistResponse, ListKeywordBlacklistData, ListRawContentResponse, ListRawContentData, ListCollectorResponse, ListCollectorData, ListExhibitionResponse, ListExhibitionData, ListContentResponse, ListContentData, ListTreeOptionResponse, ListTreeOptionData, ListCommissionSettlementResponse, ListCommissionSettlementData, ListCommissionRecordResponse, ListCommissionRecordData, ListCommentResponse, ListCommentData, ListLinksByAdminResponse, ListLinksByAdminData, ListArticlesByAdminResponse, ListArticlesByAdminData, ListArticleCategoryResponse, ListArticleCategoryData, ListBenefitResponse, ListBenefitData, ListProductResponse, ListProductData, ListAppVersionResponse, ListAppVersionData, ListAgentsResponse, ListAgentsData, GetUserInfoResponse, GetUserInfoData, UpdateUserInfoData, UpdateUserInfo1Response, UpdateUserInfo1Data, UpdateUserIndustryPreferencesData, UpdateUserBgImageData, UpdateUserAvatarData, UpdateAddedWxData, UpdateCalledPhoneData, DeleteVisitPlanData, GetVisitPlanResponse, GetVisitPlanData, CompleteVisitPlanData, UpdateCustomerRemarkData, AddViewCountData, ToggleTopData, ToggleLikeData, ToggleFavoriteData, UpdateLinkSortData, ChangeArticleStatusByAdminData, CheckSubscriptionsResponse, CheckSubscriptionsData, CheckBenefitsResponse, CheckBenefitsData, ListShortVideoPlatformUidsResponse, ListShortVideoPlatformUidsData, CountMatrixStatsResponse, CountMatrixStatsData, ValidateBeforeSendSmsResponse, ValidateBeforeSendSmsData, ListSmsRecordsResponse, ListSmsRecordsData, GetSmsAssetStatusResponse, GetSmsAssetStatusData, ListSmsRechargeRecordsResponse, ListSmsRechargeRecordsData, GetUserOpenProfileResponse, GetUserOpenProfileData, GetUserOpenProfile1Response, GetUserOpenProfile1Data, GetUserAuthDetailsResponse, GetUserAuthDetailsData, StatsUserSocialResponse, StatsUserSocialData, ListFriendUsersResponse, ListFriendUsersData, ListFollowUsersResponse, ListFollowUsersData, ListFansUsersResponse, ListFansUsersData, GetWxMpOpenIdResponse, GetWxMpOpenIdData, GetWxMpAuthUrlResponse, GetWxMpAuthUrlData, ReverseGeocodingResponse, ReverseGeocodingData, GeocodingResponse, GeocodingData, GetConfigValueResponse, GetConfigValueData, ListConfigTreeOptionsResponse, ListConfigTreeOptionsData, DeleteSysConfigByIdData, GetSysConfigResponse, GetSysConfigData, ListPopularIndustriesResponse, ListPopularIndustriesData, GetShortVideoDashboardResponse, GetShortVideoDashboardData, DeleteSmsTemplateData, GetSmsTemplateResponse, GetSmsTemplateData, DeleteSalesAgentData, GetSalesAgentResponse, GetSalesAgentData, ListSalesAgentPickerItemsResponse, ListSalesAgentPickerItemsData, GetCustomerResponse, GetCustomerData, ListCustomerTagsResponse, ListCustomerTagsData, ListCustomersByTagResponse, ListCustomersByTagData, ListCustomerPickerItemsResponse, ListCustomerPickerItemsData, GetPromoterResponse, GetPromoterData, ListUsersByPromoterIdResponse, ListUsersByPromoterIdData, ListUsersToFollowByPromoterIdResponse, ListUsersToFollowByPromoterIdData, GetProductByIdResponse, GetProductByIdData, ListProductsByCtgCodeResponse, ListProductsByCtgCodeData, GetContentShareDetailsResponse, GetContentShareDetailsData, ListLinksResponse, ListLinksData, PageArticlesResponse, PageArticlesData, GetArticleDetailsResponse, GetArticleDetailsData, ListCategoryTreeNodesResponse, ListCategoryTreeNodesData, GetArticleByPathFragmentResponse, GetArticleByPathFragmentData, GetLatestAppVersionData, CheckAppUpdateResponse, CheckAppUpdateData, CountUnreadMessageByGroupResponse, CountUnreadMessageByGroupData, ListConversationsByUserIdResponse, ListConversationsByUserIdData, CursorMessagesResponse, CursorMessagesData, PageInboxMessagesResponse, PageInboxMessagesData, PageExhibitionsResponse, PageExhibitionsData, GetExhibitionDetailsResponse, GetExhibitionDetailsData, GetResponse, GetData, ListMdmCompaniesResponse, ListMdmCompaniesData, ListOfficialEnterpriseDataResponse, ListOfficialEnterpriseDataData, ListNearbyEnterpriseResponse, ListNearbyEnterpriseData, ExportEnterpriseDataData, ListShortVideoAccountsResponse, ListShortVideoAccountsData, GetCustomerDetailsResponse, GetCustomerDetailsData, GetVisitCalendarDataResponse, GetVisitCalendarDataData, GetTodoOverviewResponse, GetTodoOverviewData, GetCustomerIndexResponse, GetCustomerIndexData, GetCustomerStatsResponse, GetCustomerStatsData, DeleteFollowUpRecordData, GetFollowUpRecordResponse, GetFollowUpRecordData, ListClueSearchHistoriesResponse, ListClueSearchHistoriesData, ListClueImportsResponse, ListClueImportsData, GetContentDetailsResponse, GetContentDetailsData, GetContentFormResponse, GetContentFormData, ListCommentsResponse, ListCommentsData, ListContentsByUserIdResponse, ListContentsByUserIdData, GetContentSharedStatsResponse, GetContentSharedStatsData, CursorPageContentsByRecommendResponse, CursorPageContentsByRecommendData, ListMyContentsResponse, ListMyContentsData, ListHomeContentsResponse, ListHomeContentsData, ListFollowContentsResponse, ListFollowContentsData, ListFavoriteContentsResponse, ListFavoriteContentsData, PageBrowsingHistoriesResponse, PageBrowsingHistoriesData, ListMyOrdersResponse, ListMyOrdersData, StatsMyOrdersResponse, StatsMyOrdersData, ListSubscriptionsResponse, ListSubscriptionsData, GetUserDetailsResponse, GetUserDetailsData, ListUserPickerItemsResponse, ListUserPickerItemsData, DeleteUserAuthData, GetMenuResponse, GetMenuData, DeleteTagData, GetTagResponse, GetTagData, DeleteStaffData, GetStaffResponse, GetStaffData, ListStaffPickerItemsResponse, ListStaffPickerItemsData, GetShortVideoRecordResponse, GetShortVideoRecordData, GetShortVideoImpressionResponse, GetShortVideoImpressionData, GetShortVideoFansResponse, GetShortVideoFansData, GetShortVideoAccountResponse, GetShortVideoAccountData, GetRoleResponse, GetRoleData, ListRolePickerItemsResponse, ListRolePickerItemsData, ListPermissionPickerItemsResponse, ListPermissionPickerItemsData, GetReportByAdminResponse, GetReportByAdminData, GetAgentProfileResponse, GetAgentProfileData, DeletePaymentRecordByIdData, GetPaymentRecordResponse, GetPaymentRecordData, DeleteOrderData, GetOrderResponse, GetOrderData, DeleteMenuByIdData, GetMenu1Response, GetMenu1Data, ListMenuPickerItemResponse, ListMenuPickerItemData, ListMenuByPermissionsResponse, ListMenuByPermissionsData, GetSubscriptionResponse, GetSubscriptionData, GetOperationLogResponse, GetOperationLogData, GetKeywordResponse, GetKeywordData, GetKeywordUsageResponse, GetKeywordUsageData, GetKeywordBlacklistResponse, GetKeywordBlacklistData, GetRawContentResponse, GetRawContentData, GetCollectorResponse, GetCollectorData, DeleteExhibitionByIdData, GetExhibitionResponse, GetExhibitionData, GetContentResponse, GetContentData, GetTreeOptionResponse, GetTreeOptionData, GetCommissionSettlementResponse, GetCommissionSettlementData, GetCommissionRecordResponse, GetCommissionRecordData, GetCommentResponse, GetCommentData, DeleteLinkData, GetLinkDetailsResponse, GetLinkDetailsData, DeleteArticleByAdminData, GetArticleDetailsByAdminResponse, GetArticleDetailsByAdminData, DeleteArticleCategoryByIdData, GetArticleCategoryResponse, GetArticleCategoryData, ListCategoryPickerItemsResponse, ListCategoryPickerItemsData, DeleteBenefitData, GetBenefitResponse, GetBenefitData, GetBenefitReferenceResponse, GetBenefitReferenceData, DeleteProductData, GetProductResponse, GetProductData, GetAppVersionResponse, GetAppVersionData, GetAgentProfile1Response, GetAgentProfile1Data, UnbindBenefitDeviceData, DeletePushRecordData, DeleteTagByFrontendData, DeleteTagNameByFrontendData, DeleteQuickReplyData, DeletePrivateConversationData, RevokeMessageData, DeleteShortVideoAccountData, DeleteClueSearchHistoryData, DeleteData, Delete1Data, DeleteTagNameData } from './types.gen';
import { client } from './client.gen';

export type Options<TComposable extends Composable = '$fetch', TData extends TDataShape = TDataShape, ResT = unknown, DefaultT = undefined> = ClientOptions<TComposable, TData, ResT, DefaultT> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * 新增标签
 */
export const postTagByFrontend = <TComposable extends Composable = '$fetch', DefaultT extends PostTagByFrontendResponse = PostTagByFrontendResponse>(options: Options<TComposable, PostTagByFrontendData, PostTagByFrontendResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, PostTagByFrontendResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/tags',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新标签
 */
export const putTagByFrontend = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutTagByFrontendData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/tags',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增配置
 */
export const postSysConfig = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostSysConfigData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sys/configs',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新配置
 */
export const putSysConfig = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutSysConfigData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sys/configs',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 批量获取配置值
 */
export const bulkGetConfigValue = <TComposable extends Composable = '$fetch', DefaultT extends BulkGetConfigValueResponse = BulkGetConfigValueResponse>(options: Options<TComposable, BulkGetConfigValueData, BulkGetConfigValueResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, BulkGetConfigValueResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sys/configs/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新配置列表
 */
export const updateConfigs = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateConfigsData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sys/configs/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询短信模板列表
 */
export const listSmsTemplates = <TComposable extends Composable = '$fetch', DefaultT extends ListSmsTemplatesResponse = ListSmsTemplatesResponse>(options: Options<TComposable, ListSmsTemplatesData, ListSmsTemplatesResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListSmsTemplatesResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sms/templates',
        ...options
    });
};

/**
 * 创建短信模板
 */
export const saveSmsTemplate = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, SaveSmsTemplateData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sms/templates',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 修改短信模板
 */
export const updateSmsTemplate = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateSmsTemplateData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sms/templates',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增销售顾问
 */
export const postSalesAgent = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostSalesAgentData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/sales-agents',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新销售顾问
 */
export const putSalesAgent = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutSalesAgentData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/sales-agents',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 切换会话置顶
 */
export const toggleConversationTop = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, ToggleConversationTopData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/sales-agents/conversations/{id}/top',
        ...options
    });
};

/**
 * 切换会话星标
 */
export const markConversationStar = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, MarkConversationStarData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/sales-agents/conversations/star',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增客户
 */
export const postCustomer = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostCustomerData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/customers',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新客户
 */
export const putCustomer = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutCustomerData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/customers',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询推广员列表
 * 员工管理列表
 */
export const listPromoters = <TComposable extends Composable = '$fetch', DefaultT extends ListPromotersResponse = ListPromotersResponse>(options: Options<TComposable, ListPromotersData, ListPromotersResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListPromotersResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/prm/promoters',
        ...options
    });
};

/**
 * 修改推广员
 */
export const putPromoter = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutPromoterData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/prm/promoters',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 设置分组消息已读状态
 */
export const markAsReadByCheckpoint = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, MarkAsReadByCheckpointData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/msg/messaging/read/{group}',
        ...options
    });
};

/**
 * 查询快捷回复列表
 */
export const listQuickReplies = <TComposable extends Composable = '$fetch', DefaultT extends ListQuickRepliesResponse = ListQuickRepliesResponse>(options: Options<TComposable, ListQuickRepliesData, ListQuickRepliesResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListQuickRepliesResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/msg/messaging/quick-replies',
        ...options
    });
};

/**
 * 添加快捷回复
 */
export const addQuickReply = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, AddQuickReplyData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/msg/messaging/quick-replies',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新快捷回复
 */
export const updateQuickReply = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateQuickReplyData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/msg/messaging/quick-replies',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 标记会话未读
 */
export const markConversationAsUnread = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, MarkConversationAsUnreadData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/msg/messaging/chat-message/unread',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 标记会话已读
 */
export const markConversationAsRead = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, MarkConversationAsReadData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/msg/messaging/chat-message/read',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 回访计划/新增回访计划
 */
export const createVisitPlan = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, CreateVisitPlanData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/visit-plans',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 回访计划/修改回访计划
 */
export const updateVisitPlan = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateVisitPlanData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/visit-plans',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 客户分组/删除客户分组
 */
export const deleteCustomerGroup = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteCustomerGroupData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/groups/{id}',
        ...options
    });
};

/**
 * 客户分组/修改客户分组
 */
export const updateCustomerGroup = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateCustomerGroupData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/groups/{id}',
        ...options
    });
};

/**
 * 跟进记录/新增跟进记录
 */
export const createFollowUpRecord = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, CreateFollowUpRecordData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/follow-up-records',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 跟进记录/修改跟进记录
 */
export const updateFollowUpRecord = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateFollowUpRecordData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/follow-up-records',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 保存内容
 */
export const post = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 修改内容
 */
export const put = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 修改评论
 */
export const put1 = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, Put1Data, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/comments',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增用户
 */
export const postUser = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostUserData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/users',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 修改用户
 */
export const putUser = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutUserData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/users',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 审核用户认证
 */
export const reviewUserAuth = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, ReviewUserAuthData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/user/auths',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增标签
 */
export const postTag = <TComposable extends Composable = '$fetch', DefaultT extends PostTagResponse = PostTagResponse>(options: Options<TComposable, PostTagData, PostTagResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, PostTagResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/tags',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新标签
 */
export const putTag = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutTagData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/tags',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 差量修改员工信息
 */
export const patchStaff = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PatchStaffData, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/staffs',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增员工信息
 */
export const postStaff = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostStaffData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/staffs',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 修改员工信息
 */
export const putStaff = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutStaffData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/staffs',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增短视频
 */
export const postShortVideoRecord = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostShortVideoRecordData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/short-video/records',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新短视频
 */
export const putShortVideoRecord = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutShortVideoRecordData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/short-video/records',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增短视频曝光量
 */
export const postShortVideoImpression = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostShortVideoImpressionData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/short-video/impressions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新短视频曝光量
 */
export const putShortVideoImpression = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutShortVideoImpressionData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/short-video/impressions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增短视视频粉丝量
 */
export const postShortVideoFans = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostShortVideoFansData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/short-video/fans',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新短视视频粉丝量
 */
export const putShortVideoFans = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutShortVideoFansData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/short-video/fans',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增短视频账号
 */
export const postShortVideoAccount = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostShortVideoAccountData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/short-video/accounts',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新短视频账号
 */
export const putShortVideoAccount = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutShortVideoAccountData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/short-video/accounts',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增角色信息
 */
export const postRole = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostRoleData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/roles',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新角色信息
 */
export const putRole = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutRoleData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/roles',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增举报
 */
export const postReportByAdmin = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostReportByAdminData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/reports',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新举报
 */
export const putReportByAdmin = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutReportByAdminData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/reports',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增支付记录信息
 */
export const postPaymentRecord = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostPaymentRecordData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/payment-records',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新支付记录信息
 */
export const putPaymentRecord = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutPaymentRecordData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/payment-records',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 创建线下订单
 */
export const createOfflineOrder = <TComposable extends Composable = '$fetch', DefaultT extends CreateOfflineOrderResponse = CreateOfflineOrderResponse>(options: Options<TComposable, CreateOfflineOrderData, CreateOfflineOrderResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, CreateOfflineOrderResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/orders',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新线下订单
 */
export const putOrder = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutOrderData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/orders',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 批量删除菜单
 */
export const deleteMenuByIds = <TComposable extends Composable = '$fetch', DefaultT extends DeleteMenuByIdsResponse = DeleteMenuByIdsResponse>(options: Options<TComposable, DeleteMenuByIdsData, DeleteMenuByIdsResponse, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, DeleteMenuByIdsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/menus',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 部分修改菜单
 */
export const patchMenu = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PatchMenuData, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/menus',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增菜单
 */
export const postMenu = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostMenuData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/menus',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 修改菜单
 */
export const putMenu = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutMenuData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/menus',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增订阅表信息
 */
export const postSubscription = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostSubscriptionData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/member/subscriptions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新订阅表信息
 */
export const putSubscription = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutSubscriptionData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/member/subscriptions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增关键词信息
 */
export const postKeyword = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostKeywordData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/keywords',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新关键词信息
 */
export const putKeyword = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutKeywordData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/keywords',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增关键词使用记录信息
 */
export const postKeywordUsage = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostKeywordUsageData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/keyword/usages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新关键词使用记录信息
 */
export const putKeywordUsage = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutKeywordUsageData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/keyword/usages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增关键字黑名单信息
 */
export const postKeywordBlacklist = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostKeywordBlacklistData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/keyword/blacklist',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新关键字黑名单信息
 */
export const putKeywordBlacklist = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutKeywordBlacklistData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/keyword/blacklist',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增关键词原始内容信息
 */
export const postRawContent = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostRawContentData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/contents',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新关键词原始内容信息
 */
export const putRawContent = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutRawContentData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/contents',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增采集器信息
 */
export const postCollector = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostCollectorData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/collectors',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新采集器信息
 */
export const putCollector = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutCollectorData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/collectors',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增展会信息信息
 */
export const postExhibition = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostExhibitionData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/exhibitions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新展会信息信息
 */
export const putExhibition = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutExhibitionData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/exhibitions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增内容信息
 */
export const postContent = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostContentData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/contents',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新内容信息
 */
export const putContent = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutContentData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/contents',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增树结构配置项
 */
export const postTreeOption = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostTreeOptionData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/config/options',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新树结构配置项
 */
export const putTreeOption = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutTreeOptionData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/config/options',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增佣金结算信息
 */
export const postCommissionSettlement = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostCommissionSettlementData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/commission/settlements',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新佣金结算信息
 */
export const putCommissionSettlement = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutCommissionSettlementData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/commission/settlements',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增佣金记录信息
 */
export const postCommissionRecord = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostCommissionRecordData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/commission/records',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新佣金记录信息
 */
export const putCommissionRecord = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutCommissionRecordData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/commission/records',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新内容评论信息
 */
export const putComment = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutCommentData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/comments',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增链接
 */
export const postLink = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostLinkData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/links',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 修改链接
 */
export const putLink = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutLinkData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/links',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 创建文章
 */
export const createArticleByAdmin = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, CreateArticleByAdminData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/articles',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 修改文章
 */
export const updateArticleByAdmin = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateArticleByAdminData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/articles',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新文章分类状态
 */
export const patchArticleCategoryEnabled = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PatchArticleCategoryEnabledData, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/article-categories',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增文章分类信息
 */
export const postArticleCategory = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostArticleCategoryData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/article-categories',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新文章分类
 */
export const putArticleCategory = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutArticleCategoryData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/article-categories',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增资产权益表信息
 */
export const postBenefit = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostBenefitData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/benefits',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新资产权益表信息
 */
export const putBenefit = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutBenefitData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/benefits',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增产品
 */
export const postProduct = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostProductData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/asset-products',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新产品
 */
export const putProduct = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutProductData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/asset-products',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增应用版本信息
 */
export const postAppVersion = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostAppVersionData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/app/versions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新应用版本信息
 */
export const putAppVersion = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PutAppVersionData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/app/versions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 开通代理商
 */
export const createAgent = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, CreateAgentData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/agents',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新代理商
 */
export const updateAgentProfile = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateAgentProfileData, unknown, DefaultT>) => {
    return (options.client ?? client).put<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/agents',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 重置密码
 * 使用旧密码重置密码
 */
export const resetPassword = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, ResetPasswordData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/auth/reset-password',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 用户注册
 */
export const registerUser = <TComposable extends Composable = '$fetch', DefaultT extends RegisterUserResponse = RegisterUserResponse>(options: Options<TComposable, RegisterUserData, RegisterUserResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, RegisterUserResponse | DefaultT, unknown, DefaultT>({
        url: '/auth/register',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 登录
 */
export const loginUser = <TComposable extends Composable = '$fetch', DefaultT extends LoginUserResponse = LoginUserResponse>(options: Options<TComposable, LoginUserData, LoginUserResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, LoginUserResponse | DefaultT, unknown, DefaultT>({
        url: '/auth/login',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 忘记密码
 * 使用短信验证码重置
 */
export const forgetPassword = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, ForgetPasswordData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/auth/forget-password',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 会员权益设备绑定
 */
export const bindBenefitDevice = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, BindBenefitDeviceData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/vip/members/benefits/devices/bind',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 标记短视频平台用户 id 无效
 */
export const markUidInvalid = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, MarkUidInvalidData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/vip/marketing/svp/uids/{uid}/invalid',
        ...options
    });
};

/**
 * 查询短视频列表
 */
export const listShortVideoRecords = <TComposable extends Composable = '$fetch', DefaultT extends ListShortVideoRecordsResponse = ListShortVideoRecordsResponse>(options: Options<TComposable, ListShortVideoRecordsData, ListShortVideoRecordsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListShortVideoRecordsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/vip/marketing/short-video',
        ...options
    });
};

/**
 * 发布短视频
 */
export const createShortVideoRecord = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, CreateShortVideoRecordData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/vip/marketing/short-video',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询推送记录列表
 */
export const listPushRecords = <TComposable extends Composable = '$fetch', DefaultT extends ListPushRecordsResponse = ListPushRecordsResponse>(options: Options<TComposable, ListPushRecordsData, ListPushRecordsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListPushRecordsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/vip/marketing/push-record',
        ...options
    });
};

/**
 * 新增推送记录
 */
export const createPushRecord = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, CreatePushRecordData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/vip/marketing/push-record',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 上报登录设备信息
 */
export const updateSessionDevice = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateSessionDeviceData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/users/report/login-device',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 提交用户认证
 */
export const submitUserAuth = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, SubmitUserAuthData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/users/auth',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 获取用户对对其他用户的注解
 */
export const getUserAnnotation = <TComposable extends Composable = '$fetch', DefaultT extends GetUserAnnotationResponse = GetUserAnnotationResponse>(options: Options<TComposable, GetUserAnnotationData, GetUserAnnotationResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetUserAnnotationResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/users/annotation',
        ...options
    });
};

/**
 * 为用户设置注解（备注、描述、标签）
 */
export const setUserAnnotation = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, SetUserAnnotationData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/users/annotation',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 取消关注用户
 */
export const unfollowUser = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UnfollowUserData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/user/social/follow/{id}',
        ...options
    });
};

/**
 * 关注用户
 */
export const followUser = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, FollowUserData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/user/social/follow/{id}',
        ...options
    });
};

/**
 * 取消拉黑用户
 */
export const unblockUser = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UnblockUserData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/user/social/block/{id}',
        ...options
    });
};

/**
 * 拉黑用户
 */
export const blockUser = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, BlockUserData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/user/social/block/{id}',
        ...options
    });
};

/**
 * 处理支付回调
 */
export const handlePaymentCallback = <TComposable extends Composable = '$fetch', DefaultT extends HandlePaymentCallbackResponse = HandlePaymentCallbackResponse>(options: Options<TComposable, HandlePaymentCallbackData, HandlePaymentCallbackResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, HandlePaymentCallbackResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/thirdparty/pay/callback/{method}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 对象取消关联标签
 */
export const removeTagFromObjectByFrontend = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, RemoveTagFromObjectByFrontendData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/tags/{tagId}/objects/{objectId}',
        ...options
    });
};

/**
 * 对象关联标签
 */
export const addTagToObjectByFrontend = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, AddTagToObjectByFrontendData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/tags/{tagId}/objects/{objectId}',
        ...options
    });
};

/**
 * 查询用户的标签选择器项
 */
export const listTagPickerItemsByFrontend = <TComposable extends Composable = '$fetch', DefaultT extends ListTagPickerItemsByFrontendResponse = ListTagPickerItemsByFrontendResponse>(options: Options<TComposable, ListTagPickerItemsByFrontendData, ListTagPickerItemsByFrontendResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListTagPickerItemsByFrontendResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/tags/picker-items',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询对象的标签
 */
export const listTagsByObjectIdByFrontend = <TComposable extends Composable = '$fetch', DefaultT extends ListTagsByObjectIdByFrontendResponse = ListTagsByObjectIdByFrontendResponse>(options: Options<TComposable, ListTagsByObjectIdByFrontendData, ListTagsByObjectIdByFrontendResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListTagsByObjectIdByFrontendResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/tags/objects/{objectId}',
        ...options
    });
};

/**
 * 获取单值配置列表
 */
export const listConfigsBySingle = <TComposable extends Composable = '$fetch', DefaultT extends ListConfigsBySingleResponse = ListConfigsBySingleResponse>(options: Options<TComposable, ListConfigsBySingleData, ListConfigsBySingleResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListConfigsBySingleResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sys/configs/single',
        ...options
    });
};

/**
 * 获取配置列表
 */
export const listConfigs = <TComposable extends Composable = '$fetch', DefaultT extends ListConfigsResponse = ListConfigsResponse>(options: Options<TComposable, ListConfigsData, ListConfigsResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListConfigsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sys/configs/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 添加短视频曝光量记录
 */
export const addShortVideoImpressionRecord = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, AddShortVideoImpressionRecordData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/svp/impression',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 添加短视频粉丝变更记录
 */
export const addShortVideoFansRecord = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, AddShortVideoFansRecordData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/svp/fans',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询销售顾问列表
 */
export const listSalesAgent = <TComposable extends Composable = '$fetch', DefaultT extends ListSalesAgentResponse = ListSalesAgentResponse>(options: Options<TComposable, ListSalesAgentData, ListSalesAgentResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListSalesAgentResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/sales-agents/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询聊天会话列表
 */
export const listConversationsBySales = <TComposable extends Composable = '$fetch', DefaultT extends ListConversationsBySalesResponse = ListConversationsBySalesResponse>(options: Options<TComposable, ListConversationsBySalesData, ListConversationsBySalesResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListConversationsBySalesResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/sales-agents/conversations',
        ...options
    });
};

/**
 * 创建聊天会话
 */
export const createConversation = <TComposable extends Composable = '$fetch', DefaultT extends CreateConversationResponse = CreateConversationResponse>(options: Options<TComposable, CreateConversationData, CreateConversationResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, CreateConversationResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/sales-agents/conversations',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 转移客户给销售代理
 */
export const bulkReassignCustomers = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, BulkReassignCustomersData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/customers/transfer',
        ...options
    });
};

/**
 * 同步潜在客户
 */
export const syncPotentialCustomers = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, SyncPotentialCustomersData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/customers/sync-potential',
        ...options
    });
};

/**
 * 查询客户列表
 */
export const pageCustomers = <TComposable extends Composable = '$fetch', DefaultT extends PageCustomersResponse = PageCustomersResponse>(options: Options<TComposable, PageCustomersData, PageCustomersResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, PageCustomersResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/customers/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 分配客户给销售代理
 */
export const assignCustomerToAgent = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, AssignCustomerToAgentData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/customers/assign',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增举报
 */
export const postReport = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostReportData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/reports',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 邀请员工注册
 */
export const invitePromoter = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, InvitePromoterData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/prm/promoters/invite',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 绑定专属客服
 */
export const bindPromoter = <TComposable extends Composable = '$fetch', DefaultT extends BindPromoterResponse = BindPromoterResponse>(options: Options<TComposable, BindPromoterData, BindPromoterResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, BindPromoterResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/prm/promoters/bind',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 采集关键词原始内容
 */
export const postRawContent1 = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostRawContent1Data, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/p/kc/contents',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 添加浏览记录
 */
export const addBrowsingHistory = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, AddBrowsingHistoryData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/p/contents/browsing-histories',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增操作日志
 */
export const postOperationLog = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostOperationLogData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/operation-logs',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 发送通知
 */
export const send = <TComposable extends Composable = '$fetch', DefaultT extends SendResponse = SendResponse>(options: Options<TComposable, SendData, SendResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, SendResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/notifications',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询当前用户会话列表
 */
export const listConversations = <TComposable extends Composable = '$fetch', DefaultT extends ListConversationsResponse = ListConversationsResponse>(options: Options<TComposable, ListConversationsData, ListConversationsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListConversationsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/msg/messaging/private/conversations',
        ...options
    });
};

/**
 * 创建会话
 */
export const createPrivateConversation = <TComposable extends Composable = '$fetch', DefaultT extends CreatePrivateConversationResponse = CreatePrivateConversationResponse>(options: Options<TComposable, CreatePrivateConversationData, CreatePrivateConversationResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, CreatePrivateConversationResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/msg/messaging/private/conversations',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 发送系统消息
 */
export const sendInboxMessage = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, SendInboxMessageData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/msg/messaging/inbox-message',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 发送消息
 */
export const sendMessage = <TComposable extends Composable = '$fetch', DefaultT extends SendMessageResponse = SendMessageResponse>(options: Options<TComposable, SendMessageData, SendMessageResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, SendMessageResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/msg/messaging/chat-message',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 采集精确数据
 */
export const listPreciseMdmCompanies = <TComposable extends Composable = '$fetch', DefaultT extends ListPreciseMdmCompaniesResponse = ListPreciseMdmCompaniesResponse>(options: Options<TComposable, ListPreciseMdmCompaniesData, ListPreciseMdmCompaniesResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListPreciseMdmCompaniesResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/mdm/companies/precise',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 匹配身边老板
 */
export const matchBossInContacts = <TComposable extends Composable = '$fetch', DefaultT extends MatchBossInContactsResponse = MatchBossInContactsResponse>(options: Options<TComposable, MatchBossInContactsData, MatchBossInContactsResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, MatchBossInContactsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/mdm/companies/match-nearby-boss',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 采集全网客源
 */
export const listGlobalMdmCompanies = <TComposable extends Composable = '$fetch', DefaultT extends ListGlobalMdmCompaniesResponse = ListGlobalMdmCompaniesResponse>(options: Options<TComposable, ListGlobalMdmCompaniesData, ListGlobalMdmCompaniesResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListGlobalMdmCompaniesResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/mdm/companies/global',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 授权短视频账号
 */
export const authorizeShortVideoAccount = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, AuthorizeShortVideoAccountData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/matrix/accounts/authorize',
        ...options
    });
};

/**
 * 客户/批量删除客户
 */
export const deleteCustomerByIds = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteCustomerByIdsData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 客户/获取客户列表
 */
export const listPageCustomers = <TComposable extends Composable = '$fetch', DefaultT extends ListPageCustomersResponse = ListPageCustomersResponse>(options: Options<TComposable, ListPageCustomersData, ListPageCustomersResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListPageCustomersResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers',
        ...options
    });
};

/**
 * 客户/设置客户分组
 */
export const updateCustomerGroup1 = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateCustomerGroup1Data, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 客户/创建客户
 */
export const createCustomer = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, CreateCustomerData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 客户分组/获取客户分组列表
 */
export const listCustomerGroups = <TComposable extends Composable = '$fetch', DefaultT extends ListCustomerGroupsResponse = ListCustomerGroupsResponse>(options: Options<TComposable, ListCustomerGroupsData, ListCustomerGroupsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListCustomerGroupsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/groups',
        ...options
    });
};

/**
 * 客户分组/新增客户分组
 */
export const createCustomerGroup = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, CreateCustomerGroupData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/groups',
        ...options
    });
};

/**
 * 回复评论
 */
export const replyComment = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, ReplyCommentData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/comments/reply',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 新增评论
 */
export const postComment = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, PostCommentData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/comments/content',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询用户列表
 */
export const listUsersByAdmin = <TComposable extends Composable = '$fetch', DefaultT extends ListUsersByAdminResponse = ListUsersByAdminResponse>(options: Options<TComposable, ListUsersByAdminData, ListUsersByAdminResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListUsersByAdminResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/users/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询用户认证列表
 */
export const listOrder = <TComposable extends Composable = '$fetch', DefaultT extends ListOrderResponse = ListOrderResponse>(options: Options<TComposable, ListOrderData, ListOrderResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListOrderResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/user/auths/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 对象取消关联标签
 */
export const removeTagFromObject = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, RemoveTagFromObjectData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/tags/{tagId}/objects/{objectId}',
        ...options
    });
};

/**
 * 对象关联标签
 */
export const addTagToObject = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, AddTagToObjectData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/tags/{tagId}/objects/{objectId}',
        ...options
    });
};

/**
 * 查询用户的标签选择器项
 */
export const listTagPickerItems = <TComposable extends Composable = '$fetch', DefaultT extends ListTagPickerItemsResponse = ListTagPickerItemsResponse>(options: Options<TComposable, ListTagPickerItemsData, ListTagPickerItemsResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListTagPickerItemsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/tags/picker-items',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询对象的标签
 */
export const listTagsByObjectId = <TComposable extends Composable = '$fetch', DefaultT extends ListTagsByObjectIdResponse = ListTagsByObjectIdResponse>(options: Options<TComposable, ListTagsByObjectIdData, ListTagsByObjectIdResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListTagsByObjectIdResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/tags/objects/{objectId}',
        ...options
    });
};

/**
 * 查询标签列表
 */
export const listTags = <TComposable extends Composable = '$fetch', DefaultT extends ListTagsResponse = ListTagsResponse>(options: Options<TComposable, ListTagsData, ListTagsResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListTagsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/tags/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询员工列表
 */
export const listStaffs = <TComposable extends Composable = '$fetch', DefaultT extends ListStaffsResponse = ListStaffsResponse>(options: Options<TComposable, ListStaffsData, ListStaffsResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListStaffsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/staffs/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 批量新增员工
 */
export const bulkPostStaffs = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, BulkPostStaffsData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/staffs/bulk',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询种子数据列表
 */
export const pageSeedItems = <TComposable extends Composable = '$fetch', DefaultT extends PageSeedItemsResponse = PageSeedItemsResponse>(options: Options<TComposable, PageSeedItemsData, PageSeedItemsResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, PageSeedItemsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/short-video/seeds',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 导入种子数据，目前支持 CSV 文件导入
 */
export const importSeedItems = <TComposable extends Composable = '$fetch', DefaultT extends ImportSeedItemsResponse = ImportSeedItemsResponse>(options: Options<TComposable, ImportSeedItemsData, ImportSeedItemsResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ImportSeedItemsResponse | DefaultT, unknown, DefaultT>({
        ...formDataBodySerializer,
        url: '/api/v1/admin/short-video/seeds/import',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * 查询短视频列表
 */
export const listShortVideoRecord = <TComposable extends Composable = '$fetch', DefaultT extends ListShortVideoRecordResponse = ListShortVideoRecordResponse>(options: Options<TComposable, ListShortVideoRecordData, ListShortVideoRecordResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListShortVideoRecordResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/short-video/records/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询短视频曝光量列表
 */
export const listShortVideoImpression = <TComposable extends Composable = '$fetch', DefaultT extends ListShortVideoImpressionResponse = ListShortVideoImpressionResponse>(options: Options<TComposable, ListShortVideoImpressionData, ListShortVideoImpressionResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListShortVideoImpressionResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/short-video/impressions/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询短视视频粉丝量列表
 */
export const listShortVideoFans = <TComposable extends Composable = '$fetch', DefaultT extends ListShortVideoFansResponse = ListShortVideoFansResponse>(options: Options<TComposable, ListShortVideoFansData, ListShortVideoFansResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListShortVideoFansResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/short-video/fans/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询短视频账号列表
 */
export const listShortVideoAccount = <TComposable extends Composable = '$fetch', DefaultT extends ListShortVideoAccountResponse = ListShortVideoAccountResponse>(options: Options<TComposable, ListShortVideoAccountData, ListShortVideoAccountResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListShortVideoAccountResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/short-video/accounts/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询角色列表
 */
export const listRole = <TComposable extends Composable = '$fetch', DefaultT extends ListRoleResponse = ListRoleResponse>(options: Options<TComposable, ListRoleData, ListRoleResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListRoleResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/roles/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询举报列表
 */
export const listReportsByAdmin = <TComposable extends Composable = '$fetch', DefaultT extends ListReportsByAdminResponse = ListReportsByAdminResponse>(options: Options<TComposable, ListReportsByAdminData, ListReportsByAdminResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListReportsByAdminResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/reports/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询推广员列表
 */
export const listPromoters1 = <TComposable extends Composable = '$fetch', DefaultT extends ListPromoters1Response = ListPromoters1Response>(options: Options<TComposable, ListPromoters1Data, ListPromoters1Response, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListPromoters1Response | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/promoters/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询支付记录列表
 */
export const listPaymentRecord = <TComposable extends Composable = '$fetch', DefaultT extends ListPaymentRecordResponse = ListPaymentRecordResponse>(options: Options<TComposable, ListPaymentRecordData, ListPaymentRecordResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListPaymentRecordResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/payment-records/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 标记为已支付
 */
export const markAsPaid = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, MarkAsPaidData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/orders/{id}/offline',
        ...options
    });
};

/**
 * 订单退款
 */
export const refundOrder = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, RefundOrderData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/orders/refund',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询资产订单表列表
 */
export const listOrder1 = <TComposable extends Composable = '$fetch', DefaultT extends ListOrder1Response = ListOrder1Response>(options: Options<TComposable, ListOrder1Data, ListOrder1Response, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListOrder1Response | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/orders/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 修改菜单排序
 */
export const sortableMenu = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, SortableMenuData, unknown, DefaultT>) => {
    return (options.client ?? client).post<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/menus/sortable/{sourceId}/{targetId}',
        ...options
    });
};

/**
 * 查询菜单列表
 */
export const listStaff = <TComposable extends Composable = '$fetch', DefaultT extends ListStaffResponse = ListStaffResponse>(options: Options<TComposable, ListStaffData, ListStaffResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListStaffResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/menus/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询订阅表列表
 */
export const listSubscription = <TComposable extends Composable = '$fetch', DefaultT extends ListSubscriptionResponse = ListSubscriptionResponse>(options: Options<TComposable, ListSubscriptionData, ListSubscriptionResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListSubscriptionResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/member/subscriptions/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询会员操作日志列表
 */
export const listOperationLog = <TComposable extends Composable = '$fetch', DefaultT extends ListOperationLogResponse = ListOperationLogResponse>(options: Options<TComposable, ListOperationLogData, ListOperationLogResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListOperationLogResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/logs/operation/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询关键词列表
 */
export const listKeyword = <TComposable extends Composable = '$fetch', DefaultT extends ListKeywordResponse = ListKeywordResponse>(options: Options<TComposable, ListKeywordData, ListKeywordResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListKeywordResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/keywords/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询关键词使用记录列表
 */
export const listKeywordUsage = <TComposable extends Composable = '$fetch', DefaultT extends ListKeywordUsageResponse = ListKeywordUsageResponse>(options: Options<TComposable, ListKeywordUsageData, ListKeywordUsageResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListKeywordUsageResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/keyword/usages/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询关键字黑名单列表
 */
export const listKeywordBlacklist = <TComposable extends Composable = '$fetch', DefaultT extends ListKeywordBlacklistResponse = ListKeywordBlacklistResponse>(options: Options<TComposable, ListKeywordBlacklistData, ListKeywordBlacklistResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListKeywordBlacklistResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/keyword/blacklist/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询关键词原始内容列表
 */
export const listRawContent = <TComposable extends Composable = '$fetch', DefaultT extends ListRawContentResponse = ListRawContentResponse>(options: Options<TComposable, ListRawContentData, ListRawContentResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListRawContentResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/contents/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询采集器列表
 */
export const listCollector = <TComposable extends Composable = '$fetch', DefaultT extends ListCollectorResponse = ListCollectorResponse>(options: Options<TComposable, ListCollectorData, ListCollectorResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListCollectorResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/collectors/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询展会信息列表
 */
export const listExhibition = <TComposable extends Composable = '$fetch', DefaultT extends ListExhibitionResponse = ListExhibitionResponse>(options: Options<TComposable, ListExhibitionData, ListExhibitionResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListExhibitionResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/exhibitions/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询内容列表
 */
export const listContent = <TComposable extends Composable = '$fetch', DefaultT extends ListContentResponse = ListContentResponse>(options: Options<TComposable, ListContentData, ListContentResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListContentResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/contents/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询树结构配置项列表
 */
export const listTreeOption = <TComposable extends Composable = '$fetch', DefaultT extends ListTreeOptionResponse = ListTreeOptionResponse>(options: Options<TComposable, ListTreeOptionData, ListTreeOptionResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListTreeOptionResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/config/options/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询佣金结算列表
 */
export const listCommissionSettlement = <TComposable extends Composable = '$fetch', DefaultT extends ListCommissionSettlementResponse = ListCommissionSettlementResponse>(options: Options<TComposable, ListCommissionSettlementData, ListCommissionSettlementResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListCommissionSettlementResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/commission/settlements/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询佣金记录列表
 */
export const listCommissionRecord = <TComposable extends Composable = '$fetch', DefaultT extends ListCommissionRecordResponse = ListCommissionRecordResponse>(options: Options<TComposable, ListCommissionRecordData, ListCommissionRecordResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListCommissionRecordResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/commission/records/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询内容评论列表
 */
export const listComment = <TComposable extends Composable = '$fetch', DefaultT extends ListCommentResponse = ListCommentResponse>(options: Options<TComposable, ListCommentData, ListCommentResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListCommentResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/comments/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 获取链接列表
 */
export const listLinksByAdmin = <TComposable extends Composable = '$fetch', DefaultT extends ListLinksByAdminResponse = ListLinksByAdminResponse>(options: Options<TComposable, ListLinksByAdminData, ListLinksByAdminResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListLinksByAdminResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/links/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 获取文章列表
 */
export const listArticlesByAdmin = <TComposable extends Composable = '$fetch', DefaultT extends ListArticlesByAdminResponse = ListArticlesByAdminResponse>(options: Options<TComposable, ListArticlesByAdminData, ListArticlesByAdminResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListArticlesByAdminResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/articles/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询文章分类列表
 */
export const listArticleCategory = <TComposable extends Composable = '$fetch', DefaultT extends ListArticleCategoryResponse = ListArticleCategoryResponse>(options: Options<TComposable, ListArticleCategoryData, ListArticleCategoryResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListArticleCategoryResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/article-categories/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询资产权益表列表
 */
export const listBenefit = <TComposable extends Composable = '$fetch', DefaultT extends ListBenefitResponse = ListBenefitResponse>(options: Options<TComposable, ListBenefitData, ListBenefitResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListBenefitResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/benefits/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询产品列表
 */
export const listProduct = <TComposable extends Composable = '$fetch', DefaultT extends ListProductResponse = ListProductResponse>(options: Options<TComposable, ListProductData, ListProductResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListProductResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/asset-products/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询应用版本列表
 */
export const listAppVersion = <TComposable extends Composable = '$fetch', DefaultT extends ListAppVersionResponse = ListAppVersionResponse>(options: Options<TComposable, ListAppVersionData, ListAppVersionResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListAppVersionResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/app/versions/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询代理商列表
 */
export const listAgents = <TComposable extends Composable = '$fetch', DefaultT extends ListAgentsResponse = ListAgentsResponse>(options: Options<TComposable, ListAgentsData, ListAgentsResponse, DefaultT>) => {
    return (options.client ?? client).post<TComposable, ListAgentsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/agents/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 我的信息
 */
export const getUserInfo = <TComposable extends Composable = '$fetch', DefaultT extends GetUserInfoResponse = GetUserInfoResponse>(options: Options<TComposable, GetUserInfoData, GetUserInfoResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetUserInfoResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/users/userinfo',
        ...options
    });
};

/**
 * 更新用户资料
 */
export const updateUserInfo = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateUserInfoData, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/users/userinfo',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 查询用户关注行业列表
 */
export const updateUserInfo1 = <TComposable extends Composable = '$fetch', DefaultT extends UpdateUserInfo1Response = UpdateUserInfo1Response>(options: Options<TComposable, UpdateUserInfo1Data, UpdateUserInfo1Response, DefaultT>) => {
    return (options.client ?? client).get<TComposable, UpdateUserInfo1Response | DefaultT, unknown, DefaultT>({
        url: '/api/v1/users/follow/industries',
        ...options
    });
};

/**
 * 更新用户行业偏好
 */
export const updateUserIndustryPreferences = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateUserIndustryPreferencesData, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/users/follow/industries',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新用户背景图片
 */
export const updateUserBgImage = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateUserBgImageData, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/users/background-image',
        ...options
    });
};

/**
 * 更新用户头像
 */
export const updateUserAvatar = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateUserAvatarData, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/users/avatar',
        ...options
    });
};

/**
 * 客户/设置客户添加微信
 */
export const updateAddedWx = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateAddedWxData, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/{id}/wx',
        ...options
    });
};

/**
 * 客户/设置客户拨打电话
 */
export const updateCalledPhone = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateCalledPhoneData, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/{id}/called-phone',
        ...options
    });
};

/**
 * 回访计划/删除回访计划
 */
export const deleteVisitPlan = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteVisitPlanData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/visit-plans/{id}',
        ...options
    });
};

/**
 * 回访计划/查询回访计划详情
 */
export const getVisitPlan = <TComposable extends Composable = '$fetch', DefaultT extends GetVisitPlanResponse = GetVisitPlanResponse>(options: Options<TComposable, GetVisitPlanData, GetVisitPlanResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetVisitPlanResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/visit-plans/{id}',
        ...options
    });
};

/**
 * 回访计划/完成回访计划
 */
export const completeVisitPlan = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, CompleteVisitPlanData, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/visit-plans/{id}',
        ...options
    });
};

/**
 * 客户/设置客户备注
 */
export const updateCustomerRemark = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateCustomerRemarkData, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/remark',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 添加内容浏览量
 */
export const addViewCount = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, AddViewCountData, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents/{id}/viewCount',
        ...options
    });
};

/**
 * 切换内容置顶状态
 */
export const toggleTop = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, ToggleTopData, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents/{id}/top',
        ...options
    });
};

/**
 * 切换内容点赞状态
 */
export const toggleLike = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, ToggleLikeData, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents/{id}/like',
        ...options
    });
};

/**
 * 切换内容收藏状态
 */
export const toggleFavorite = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, ToggleFavoriteData, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents/{id}/favorite',
        ...options
    });
};

/**
 * 修改链接排序
 */
export const updateLinkSort = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UpdateLinkSortData, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/links/sortable',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更改文章状态
 */
export const changeArticleStatusByAdmin = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, ChangeArticleStatusByAdminData, unknown, DefaultT>) => {
    return (options.client ?? client).patch<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/articles/{id}/switch-status',
        ...options
    });
};

/**
 * 会员订阅检查
 */
export const checkSubscriptions = <TComposable extends Composable = '$fetch', DefaultT extends CheckSubscriptionsResponse = CheckSubscriptionsResponse>(options: Options<TComposable, CheckSubscriptionsData, CheckSubscriptionsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, CheckSubscriptionsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/vip/members/subscriptions',
        ...options
    });
};

/**
 * 会员权益检查
 */
export const checkBenefits = <TComposable extends Composable = '$fetch', DefaultT extends CheckBenefitsResponse = CheckBenefitsResponse>(options: Options<TComposable, CheckBenefitsData, CheckBenefitsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, CheckBenefitsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/vip/members/benefits/check',
        ...options
    });
};

/**
 * 查询短视频平台用户 id
 */
export const listShortVideoPlatformUids = <TComposable extends Composable = '$fetch', DefaultT extends ListShortVideoPlatformUidsResponse = ListShortVideoPlatformUidsResponse>(options: Options<TComposable, ListShortVideoPlatformUidsData, ListShortVideoPlatformUidsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListShortVideoPlatformUidsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/vip/marketing/svp/uids',
        ...options
    });
};

/**
 * 矩阵账号数据统计
 */
export const countMatrixStats = <TComposable extends Composable = '$fetch', DefaultT extends CountMatrixStatsResponse = CountMatrixStatsResponse>(options: Options<TComposable, CountMatrixStatsData, CountMatrixStatsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, CountMatrixStatsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/vip/marketing/matrix/stats',
        ...options
    });
};

/**
 * 发送短信前校验
 */
export const validateBeforeSendSms = <TComposable extends Composable = '$fetch', DefaultT extends ValidateBeforeSendSmsResponse = ValidateBeforeSendSmsResponse>(options: Options<TComposable, ValidateBeforeSendSmsData, ValidateBeforeSendSmsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ValidateBeforeSendSmsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/vip/assets/validate-before-send-sms',
        ...options
    });
};

/**
 * 查询短信使用记录
 */
export const listSmsRecords = <TComposable extends Composable = '$fetch', DefaultT extends ListSmsRecordsResponse = ListSmsRecordsResponse>(options: Options<TComposable, ListSmsRecordsData, ListSmsRecordsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListSmsRecordsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/vip/assets/usage-records',
        ...options
    });
};

/**
 * 查询短信资产状态
 */
export const getSmsAssetStatus = <TComposable extends Composable = '$fetch', DefaultT extends GetSmsAssetStatusResponse = GetSmsAssetStatusResponse>(options: Options<TComposable, GetSmsAssetStatusData, GetSmsAssetStatusResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetSmsAssetStatusResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/vip/assets/stats',
        ...options
    });
};

/**
 * 查询短信充值记录
 */
export const listSmsRechargeRecords = <TComposable extends Composable = '$fetch', DefaultT extends ListSmsRechargeRecordsResponse = ListSmsRechargeRecordsResponse>(options: Options<TComposable, ListSmsRechargeRecordsData, ListSmsRechargeRecordsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListSmsRechargeRecordsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/vip/assets/recharge-records',
        ...options
    });
};

/**
 * 获取用户公开资料
 */
export const getUserOpenProfile = <TComposable extends Composable = '$fetch', DefaultT extends GetUserOpenProfileResponse = GetUserOpenProfileResponse>(options: Options<TComposable, GetUserOpenProfileData, GetUserOpenProfileResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetUserOpenProfileResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/users/{id}/profile',
        ...options
    });
};

/**
 * 手机号搜索用户
 */
export const getUserOpenProfile1 = <TComposable extends Composable = '$fetch', DefaultT extends GetUserOpenProfile1Response = GetUserOpenProfile1Response>(options: Options<TComposable, GetUserOpenProfile1Data, GetUserOpenProfile1Response, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetUserOpenProfile1Response | DefaultT, unknown, DefaultT>({
        url: '/api/v1/users/profile',
        ...options
    });
};

/**
 * 查看用户认证详情
 */
export const getUserAuthDetails = <TComposable extends Composable = '$fetch', DefaultT extends GetUserAuthDetailsResponse = GetUserAuthDetailsResponse>(options: Options<TComposable, GetUserAuthDetailsData, GetUserAuthDetailsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetUserAuthDetailsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/users/auth/details',
        ...options
    });
};

/**
 * 查询用户社交关系统计
 */
export const statsUserSocial = <TComposable extends Composable = '$fetch', DefaultT extends StatsUserSocialResponse = StatsUserSocialResponse>(options: Options<TComposable, StatsUserSocialData, StatsUserSocialResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, StatsUserSocialResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/user/social/stats',
        ...options
    });
};

/**
 * 查询用户好友列表
 */
export const listFriendUsers = <TComposable extends Composable = '$fetch', DefaultT extends ListFriendUsersResponse = ListFriendUsersResponse>(options: Options<TComposable, ListFriendUsersData, ListFriendUsersResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListFriendUsersResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/user/social/friend',
        ...options
    });
};

/**
 * 查询用户关注列表
 */
export const listFollowUsers = <TComposable extends Composable = '$fetch', DefaultT extends ListFollowUsersResponse = ListFollowUsersResponse>(options: Options<TComposable, ListFollowUsersData, ListFollowUsersResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListFollowUsersResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/user/social/follow',
        ...options
    });
};

/**
 * 查询用户粉丝列表
 */
export const listFansUsers = <TComposable extends Composable = '$fetch', DefaultT extends ListFansUsersResponse = ListFansUsersResponse>(options: Options<TComposable, ListFansUsersData, ListFansUsersResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListFansUsersResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/user/social/fans',
        ...options
    });
};

/**
 * 获取微信用户公开信息
 */
export const getWxMpOpenId = <TComposable extends Composable = '$fetch', DefaultT extends GetWxMpOpenIdResponse = GetWxMpOpenIdResponse>(options: Options<TComposable, GetWxMpOpenIdData, GetWxMpOpenIdResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetWxMpOpenIdResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/thirdparty/wxmp/openid',
        ...options
    });
};

/**
 * 获取微信授权URL
 */
export const getWxMpAuthUrl = <TComposable extends Composable = '$fetch', DefaultT extends GetWxMpAuthUrlResponse = GetWxMpAuthUrlResponse>(options: Options<TComposable, GetWxMpAuthUrlData, GetWxMpAuthUrlResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetWxMpAuthUrlResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/thirdparty/wxmp/auth/url',
        ...options
    });
};

/**
 * 逆地理编码(经纬度换地理位置信息)
 */
export const reverseGeocoding = <TComposable extends Composable = '$fetch', DefaultT extends ReverseGeocodingResponse = ReverseGeocodingResponse>(options: Options<TComposable, ReverseGeocodingData, ReverseGeocodingResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ReverseGeocodingResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/thirdparty/map/baidu/reverseGeocoding',
        ...options
    });
};

/**
 * 地理编码(地理位置信息换经纬度)
 */
export const geocoding = <TComposable extends Composable = '$fetch', DefaultT extends GeocodingResponse = GeocodingResponse>(options: Options<TComposable, GeocodingData, GeocodingResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GeocodingResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/thirdparty/map/baidu/geocoding',
        ...options
    });
};

/**
 * 获取配置值
 */
export const getConfigValue = <TComposable extends Composable = '$fetch', DefaultT extends GetConfigValueResponse = GetConfigValueResponse>(options: Options<TComposable, GetConfigValueData, GetConfigValueResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetConfigValueResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sys/configs/{key}/value',
        ...options
    });
};

/**
 * 获取配置选项
 */
export const listConfigTreeOptions = <TComposable extends Composable = '$fetch', DefaultT extends ListConfigTreeOptionsResponse = ListConfigTreeOptionsResponse>(options: Options<TComposable, ListConfigTreeOptionsData, ListConfigTreeOptionsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListConfigTreeOptionsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sys/configs/{key}/options',
        ...options
    });
};

/**
 * 删除配置
 */
export const deleteSysConfigById = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteSysConfigByIdData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sys/configs/{id}',
        ...options
    });
};

/**
 * 查询配置详情
 */
export const getSysConfig = <TComposable extends Composable = '$fetch', DefaultT extends GetSysConfigResponse = GetSysConfigResponse>(options: Options<TComposable, GetSysConfigData, GetSysConfigResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetSysConfigResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sys/configs/{id}',
        ...options
    });
};

/**
 * 获取热门行业列表
 */
export const listPopularIndustries = <TComposable extends Composable = '$fetch', DefaultT extends ListPopularIndustriesResponse = ListPopularIndustriesResponse>(options: Options<TComposable, ListPopularIndustriesData, ListPopularIndustriesResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListPopularIndustriesResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sys/configs/popular',
        ...options
    });
};

/**
 * 查询短视频数据看台
 */
export const getShortVideoDashboard = <TComposable extends Composable = '$fetch', DefaultT extends GetShortVideoDashboardResponse = GetShortVideoDashboardResponse>(options: Options<TComposable, GetShortVideoDashboardData, GetShortVideoDashboardResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetShortVideoDashboardResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/svp/dashboard',
        ...options
    });
};

/**
 * 删除短信模板
 */
export const deleteSmsTemplate = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteSmsTemplateData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sms/templates/{id}',
        ...options
    });
};

/**
 * 查询短信模板详情
 */
export const getSmsTemplate = <TComposable extends Composable = '$fetch', DefaultT extends GetSmsTemplateResponse = GetSmsTemplateResponse>(options: Options<TComposable, GetSmsTemplateData, GetSmsTemplateResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetSmsTemplateResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sms/templates/{id}',
        ...options
    });
};

/**
 * 删除销售顾问
 */
export const deleteSalesAgent = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteSalesAgentData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/sales-agents/{id}',
        ...options
    });
};

/**
 * 查询销售顾问详情
 */
export const getSalesAgent = <TComposable extends Composable = '$fetch', DefaultT extends GetSalesAgentResponse = GetSalesAgentResponse>(options: Options<TComposable, GetSalesAgentData, GetSalesAgentResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetSalesAgentResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/sales-agents/{id}',
        ...options
    });
};

/**
 * 销售顾问选择器
 */
export const listSalesAgentPickerItems = <TComposable extends Composable = '$fetch', DefaultT extends ListSalesAgentPickerItemsResponse = ListSalesAgentPickerItemsResponse>(options: Options<TComposable, ListSalesAgentPickerItemsData, ListSalesAgentPickerItemsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListSalesAgentPickerItemsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/sales-agents/picker',
        ...options
    });
};

/**
 * 查询客户详情
 */
export const getCustomer = <TComposable extends Composable = '$fetch', DefaultT extends GetCustomerResponse = GetCustomerResponse>(options: Options<TComposable, GetCustomerData, GetCustomerResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetCustomerResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/customers/{id}',
        ...options
    });
};

/**
 * 客户标签列表
 */
export const listCustomerTags = <TComposable extends Composable = '$fetch', DefaultT extends ListCustomerTagsResponse = ListCustomerTagsResponse>(options: Options<TComposable, ListCustomerTagsData, ListCustomerTagsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListCustomerTagsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/customers/tags',
        ...options
    });
};

/**
 * 根据标签查询客户
 */
export const listCustomersByTag = <TComposable extends Composable = '$fetch', DefaultT extends ListCustomersByTagResponse = ListCustomersByTagResponse>(options: Options<TComposable, ListCustomersByTagData, ListCustomersByTagResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListCustomersByTagResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/customers/tags/{tagId}',
        ...options
    });
};

/**
 * 查询客户选择项
 */
export const listCustomerPickerItems = <TComposable extends Composable = '$fetch', DefaultT extends ListCustomerPickerItemsResponse = ListCustomerPickerItemsResponse>(options: Options<TComposable, ListCustomerPickerItemsData, ListCustomerPickerItemsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListCustomerPickerItemsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/sfa/admin/customers/picker-items',
        ...options
    });
};

/**
 * 查询推广员详情
 */
export const getPromoter = <TComposable extends Composable = '$fetch', DefaultT extends GetPromoterResponse = GetPromoterResponse>(options: Options<TComposable, GetPromoterData, GetPromoterResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetPromoterResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/prm/promoters/{id}',
        ...options
    });
};

/**
 * 查询推广员的用户列表
 */
export const listUsersByPromoterId = <TComposable extends Composable = '$fetch', DefaultT extends ListUsersByPromoterIdResponse = ListUsersByPromoterIdResponse>(options: Options<TComposable, ListUsersByPromoterIdData, ListUsersByPromoterIdResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListUsersByPromoterIdResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/prm/promoters/users',
        ...options
    });
};

/**
 * 查询推广员待跟进的用户列表
 */
export const listUsersToFollowByPromoterId = <TComposable extends Composable = '$fetch', DefaultT extends ListUsersToFollowByPromoterIdResponse = ListUsersToFollowByPromoterIdResponse>(options: Options<TComposable, ListUsersToFollowByPromoterIdData, ListUsersToFollowByPromoterIdResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListUsersToFollowByPromoterIdResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/prm/promoters/users/to-follow',
        ...options
    });
};

/**
 * 获取特定的产品
 */
export const getProductById = <TComposable extends Composable = '$fetch', DefaultT extends GetProductByIdResponse = GetProductByIdResponse>(options: Options<TComposable, GetProductByIdData, GetProductByIdResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetProductByIdResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/pcc/products/{id}',
        ...options
    });
};

/**
 * 获取分类下的产品
 */
export const listProductsByCtgCode = <TComposable extends Composable = '$fetch', DefaultT extends ListProductsByCtgCodeResponse = ListProductsByCtgCodeResponse>(options: Options<TComposable, ListProductsByCtgCodeData, ListProductsByCtgCodeResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListProductsByCtgCodeResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/pcc/categories/{code}/products',
        ...options
    });
};

/**
 * 获取商机分享详情
 */
export const getContentShareDetails = <TComposable extends Composable = '$fetch', DefaultT extends GetContentShareDetailsResponse = GetContentShareDetailsResponse>(options: Options<TComposable, GetContentShareDetailsData, GetContentShareDetailsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetContentShareDetailsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/p/contents/{id}',
        ...options
    });
};

/**
 * 获取首页横幅
 */
export const listLinks = <TComposable extends Composable = '$fetch', DefaultT extends ListLinksResponse = ListLinksResponse>(options: Options<TComposable, ListLinksData, ListLinksResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListLinksResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/p/cms/links/carousel',
        ...options
    });
};

/**
 * 获取文章列表
 */
export const pageArticles = <TComposable extends Composable = '$fetch', DefaultT extends PageArticlesResponse = PageArticlesResponse>(options: Options<TComposable, PageArticlesData, PageArticlesResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, PageArticlesResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/p/cms/articles',
        ...options
    });
};

/**
 * 获取文章详情
 */
export const getArticleDetails = <TComposable extends Composable = '$fetch', DefaultT extends GetArticleDetailsResponse = GetArticleDetailsResponse>(options: Options<TComposable, GetArticleDetailsData, GetArticleDetailsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetArticleDetailsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/p/cms/articles/{id}',
        ...options
    });
};

/**
 * 获取文章分类树
 */
export const listCategoryTreeNodes = <TComposable extends Composable = '$fetch', DefaultT extends ListCategoryTreeNodesResponse = ListCategoryTreeNodesResponse>(options: Options<TComposable, ListCategoryTreeNodesData, ListCategoryTreeNodesResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListCategoryTreeNodesResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/p/cms/articles/tree',
        ...options
    });
};

/**
 * 根据文章路径获取文章
 */
export const getArticleByPathFragment = <TComposable extends Composable = '$fetch', DefaultT extends GetArticleByPathFragmentResponse = GetArticleByPathFragmentResponse>(options: Options<TComposable, GetArticleByPathFragmentData, GetArticleByPathFragmentResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetArticleByPathFragmentResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/p/cms/articles/path/{fragment}',
        ...options
    });
};

/**
 * 获取最新启用的应用版本
 */
export const getLatestAppVersion = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, GetLatestAppVersionData, unknown, DefaultT>) => {
    return (options.client ?? client).get<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/p/app/versions/latest',
        ...options
    });
};

/**
 * 检查应用新版本
 */
export const checkAppUpdate = <TComposable extends Composable = '$fetch', DefaultT extends CheckAppUpdateResponse = CheckAppUpdateResponse>(options: Options<TComposable, CheckAppUpdateData, CheckAppUpdateResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, CheckAppUpdateResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/p/app/versions/check',
        ...options
    });
};

/**
 * 查询未读消息数量
 */
export const countUnreadMessageByGroup = <TComposable extends Composable = '$fetch', DefaultT extends CountUnreadMessageByGroupResponse = CountUnreadMessageByGroupResponse>(options: Options<TComposable, CountUnreadMessageByGroupData, CountUnreadMessageByGroupResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, CountUnreadMessageByGroupResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/msg/messaging/unread',
        ...options
    });
};

/**
 * 查询指定用户会话列表
 */
export const listConversationsByUserId = <TComposable extends Composable = '$fetch', DefaultT extends ListConversationsByUserIdResponse = ListConversationsByUserIdResponse>(options: Options<TComposable, ListConversationsByUserIdData, ListConversationsByUserIdResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListConversationsByUserIdResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/msg/messaging/private/{userId}/conversations',
        ...options
    });
};

/**
 * 查询会话消息列表
 */
export const cursorMessages = <TComposable extends Composable = '$fetch', DefaultT extends CursorMessagesResponse = CursorMessagesResponse>(options: Options<TComposable, CursorMessagesData, CursorMessagesResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, CursorMessagesResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/msg/messaging/private/conversations/messages/cursor',
        ...options
    });
};

/**
 * 查询分组消息列表
 */
export const pageInboxMessages = <TComposable extends Composable = '$fetch', DefaultT extends PageInboxMessagesResponse = PageInboxMessagesResponse>(options: Options<TComposable, PageInboxMessagesData, PageInboxMessagesResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, PageInboxMessagesResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/msg/messaging/groups/messages',
        ...options
    });
};

/**
 * 获取展会列表
 */
export const pageExhibitions = <TComposable extends Composable = '$fetch', DefaultT extends PageExhibitionsResponse = PageExhibitionsResponse>(options: Options<TComposable, PageExhibitionsData, PageExhibitionsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, PageExhibitionsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/mdm/exhibitions',
        ...options
    });
};

/**
 * 获取展会详情
 */
export const getExhibitionDetails = <TComposable extends Composable = '$fetch', DefaultT extends GetExhibitionDetailsResponse = GetExhibitionDetailsResponse>(options: Options<TComposable, GetExhibitionDetailsData, GetExhibitionDetailsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetExhibitionDetailsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/mdm/exhibitions/{id}',
        ...options
    });
};

/**
 * 查询企业详情
 */
export const get = <TComposable extends Composable = '$fetch', DefaultT extends GetResponse = GetResponse>(options: Options<TComposable, GetData, GetResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/mdm/companies/{id}',
        ...options
    });
};

/**
 * 根据线索 id 查询企业信息列表
 */
export const listMdmCompanies = <TComposable extends Composable = '$fetch', DefaultT extends ListMdmCompaniesResponse = ListMdmCompaniesResponse>(options: Options<TComposable, ListMdmCompaniesData, ListMdmCompaniesResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListMdmCompaniesResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/mdm/companies/via-clue',
        ...options
    });
};

/**
 * 查询工商数据
 */
export const listOfficialEnterpriseData = <TComposable extends Composable = '$fetch', DefaultT extends ListOfficialEnterpriseDataResponse = ListOfficialEnterpriseDataResponse>(options: Options<TComposable, ListOfficialEnterpriseDataData, ListOfficialEnterpriseDataResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListOfficialEnterpriseDataResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/mdm/companies/official',
        ...options
    });
};

/**
 * 查询附近企业
 */
export const listNearbyEnterprise = <TComposable extends Composable = '$fetch', DefaultT extends ListNearbyEnterpriseResponse = ListNearbyEnterpriseResponse>(options: Options<TComposable, ListNearbyEnterpriseData, ListNearbyEnterpriseResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListNearbyEnterpriseResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/mdm/companies/nearby',
        ...options
    });
};

/**
 * 导出客户数据
 */
export const exportEnterpriseData = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, ExportEnterpriseDataData, unknown, DefaultT>) => {
    return (options.client ?? client).get<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/mdm/companies/export/{exportType}',
        ...options
    });
};

/**
 * 获取短视频账号列表
 */
export const listShortVideoAccounts = <TComposable extends Composable = '$fetch', DefaultT extends ListShortVideoAccountsResponse = ListShortVideoAccountsResponse>(options: Options<TComposable, ListShortVideoAccountsData, ListShortVideoAccountsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListShortVideoAccountsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/matrix/accounts',
        ...options
    });
};

/**
 * 客户/获取客户详情
 */
export const getCustomerDetails = <TComposable extends Composable = '$fetch', DefaultT extends GetCustomerDetailsResponse = GetCustomerDetailsResponse>(options: Options<TComposable, GetCustomerDetailsData, GetCustomerDetailsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetCustomerDetailsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/{id}',
        ...options
    });
};

/**
 * 待办事项/查询回访日历
 */
export const getVisitCalendarData = <TComposable extends Composable = '$fetch', DefaultT extends GetVisitCalendarDataResponse = GetVisitCalendarDataResponse>(options: Options<TComposable, GetVisitCalendarDataData, GetVisitCalendarDataResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetVisitCalendarDataResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/visit-calendar',
        ...options
    });
};

/**
 * 待办事项/查询待办事项
 */
export const getTodoOverview = <TComposable extends Composable = '$fetch', DefaultT extends GetTodoOverviewResponse = GetTodoOverviewResponse>(options: Options<TComposable, GetTodoOverviewData, GetTodoOverviewResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetTodoOverviewResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/todo',
        ...options
    });
};

/**
 * 数据统计/查询客户指标数据
 */
export const getCustomerIndex = <TComposable extends Composable = '$fetch', DefaultT extends GetCustomerIndexResponse = GetCustomerIndexResponse>(options: Options<TComposable, GetCustomerIndexData, GetCustomerIndexResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetCustomerIndexResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/stats/customer',
        ...options
    });
};

/**
 * 数据统计/查询客户管理数据统计
 */
export const getCustomerStats = <TComposable extends Composable = '$fetch', DefaultT extends GetCustomerStatsResponse = GetCustomerStatsResponse>(options: Options<TComposable, GetCustomerStatsData, GetCustomerStatsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetCustomerStatsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/statistics',
        ...options
    });
};

/**
 * 跟进记录/删除跟进记录
 */
export const deleteFollowUpRecord = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteFollowUpRecordData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/follow-up-records/{id}',
        ...options
    });
};

/**
 * 跟进记录/查询跟进记录详情
 */
export const getFollowUpRecord = <TComposable extends Composable = '$fetch', DefaultT extends GetFollowUpRecordResponse = GetFollowUpRecordResponse>(options: Options<TComposable, GetFollowUpRecordData, GetFollowUpRecordResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetFollowUpRecordResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/customers/follow-up-records/{id}',
        ...options
    });
};

/**
 * 查询线索管理列表
 * 客源线索搜索历史记录
 */
export const listClueSearchHistories = <TComposable extends Composable = '$fetch', DefaultT extends ListClueSearchHistoriesResponse = ListClueSearchHistoriesResponse>(options: Options<TComposable, ListClueSearchHistoriesData, ListClueSearchHistoriesResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListClueSearchHistoriesResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/clues/search-histories',
        ...options
    });
};

/**
 * 查询线索采集导入列表
 */
export const listClueImports = <TComposable extends Composable = '$fetch', DefaultT extends ListClueImportsResponse = ListClueImportsResponse>(options: Options<TComposable, ListClueImportsData, ListClueImportsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListClueImportsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/clues/imports',
        ...options
    });
};

/**
 * 获取内容详情
 */
export const getContentDetails = <TComposable extends Composable = '$fetch', DefaultT extends GetContentDetailsResponse = GetContentDetailsResponse>(options: Options<TComposable, GetContentDetailsData, GetContentDetailsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetContentDetailsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents/{id}',
        ...options
    });
};

/**
 * 获取内容表单（编辑）
 */
export const getContentForm = <TComposable extends Composable = '$fetch', DefaultT extends GetContentFormResponse = GetContentFormResponse>(options: Options<TComposable, GetContentFormData, GetContentFormResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetContentFormResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents/{id}/edit',
        ...options
    });
};

/**
 * 获取内容评论列表
 */
export const listComments = <TComposable extends Composable = '$fetch', DefaultT extends ListCommentsResponse = ListCommentsResponse>(options: Options<TComposable, ListCommentsData, ListCommentsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListCommentsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents/{id}/comments',
        ...options
    });
};

/**
 * 获取用户发布的内容列表
 */
export const listContentsByUserId = <TComposable extends Composable = '$fetch', DefaultT extends ListContentsByUserIdResponse = ListContentsByUserIdResponse>(options: Options<TComposable, ListContentsByUserIdData, ListContentsByUserIdResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListContentsByUserIdResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents/specific-user',
        ...options
    });
};

/**
 * 查询商机分享数据统计信息
 */
export const getContentSharedStats = <TComposable extends Composable = '$fetch', DefaultT extends GetContentSharedStatsResponse = GetContentSharedStatsResponse>(options: Options<TComposable, GetContentSharedStatsData, GetContentSharedStatsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetContentSharedStatsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents/shared/stats',
        ...options
    });
};

/**
 * 查询商机推送列表
 */
export const cursorPageContentsByRecommend = <TComposable extends Composable = '$fetch', DefaultT extends CursorPageContentsByRecommendResponse = CursorPageContentsByRecommendResponse>(options: Options<TComposable, CursorPageContentsByRecommendData, CursorPageContentsByRecommendResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, CursorPageContentsByRecommendResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents/recommend',
        ...options
    });
};

/**
 * 获取我发布的内容列表
 */
export const listMyContents = <TComposable extends Composable = '$fetch', DefaultT extends ListMyContentsResponse = ListMyContentsResponse>(options: Options<TComposable, ListMyContentsData, ListMyContentsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListMyContentsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents/me',
        ...options
    });
};

/**
 * 获取首页内容列表
 */
export const listHomeContents = <TComposable extends Composable = '$fetch', DefaultT extends ListHomeContentsResponse = ListHomeContentsResponse>(options: Options<TComposable, ListHomeContentsData, ListHomeContentsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListHomeContentsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents/home',
        ...options
    });
};

/**
 * 获取我关注的内容列表
 */
export const listFollowContents = <TComposable extends Composable = '$fetch', DefaultT extends ListFollowContentsResponse = ListFollowContentsResponse>(options: Options<TComposable, ListFollowContentsData, ListFollowContentsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListFollowContentsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents/follow',
        ...options
    });
};

/**
 * 获取我收藏的内容列表
 */
export const listFavoriteContents = <TComposable extends Composable = '$fetch', DefaultT extends ListFavoriteContentsResponse = ListFavoriteContentsResponse>(options: Options<TComposable, ListFavoriteContentsData, ListFavoriteContentsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListFavoriteContentsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents/favorite',
        ...options
    });
};

/**
 * 查询商机浏览记录列表
 */
export const pageBrowsingHistories = <TComposable extends Composable = '$fetch', DefaultT extends PageBrowsingHistoriesResponse = PageBrowsingHistoriesResponse>(options: Options<TComposable, PageBrowsingHistoriesData, PageBrowsingHistoriesResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, PageBrowsingHistoriesResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents/browsing-histories',
        ...options
    });
};

/**
 * 查询我的订单列表
 */
export const listMyOrders = <TComposable extends Composable = '$fetch', DefaultT extends ListMyOrdersResponse = ListMyOrdersResponse>(options: Options<TComposable, ListMyOrdersData, ListMyOrdersResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListMyOrdersResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/app/trade/orders/me',
        ...options
    });
};

/**
 * 统计我的订单数据
 */
export const statsMyOrders = <TComposable extends Composable = '$fetch', DefaultT extends StatsMyOrdersResponse = StatsMyOrdersResponse>(options: Options<TComposable, StatsMyOrdersData, StatsMyOrdersResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, StatsMyOrdersResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/app/trade/orders/me/stats',
        ...options
    });
};

/**
 * 查询客户订阅
 */
export const listSubscriptions = <TComposable extends Composable = '$fetch', DefaultT extends ListSubscriptionsResponse = ListSubscriptionsResponse>(options: Options<TComposable, ListSubscriptionsData, ListSubscriptionsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListSubscriptionsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/users/{memberId}/subscriptions',
        ...options
    });
};

/**
 * 查询用户详情
 */
export const getUserDetails = <TComposable extends Composable = '$fetch', DefaultT extends GetUserDetailsResponse = GetUserDetailsResponse>(options: Options<TComposable, GetUserDetailsData, GetUserDetailsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetUserDetailsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/users/{id}',
        ...options
    });
};

/**
 * 用户选择器
 */
export const listUserPickerItems = <TComposable extends Composable = '$fetch', DefaultT extends ListUserPickerItemsResponse = ListUserPickerItemsResponse>(options: Options<TComposable, ListUserPickerItemsData, ListUserPickerItemsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListUserPickerItemsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/users/picker',
        ...options
    });
};

/**
 * 删除审核用户认证
 */
export const deleteUserAuth = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteUserAuthData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/user/auths/{id}',
        ...options
    });
};

/**
 * 查询用户认证详情
 */
export const getMenu = <TComposable extends Composable = '$fetch', DefaultT extends GetMenuResponse = GetMenuResponse>(options: Options<TComposable, GetMenuData, GetMenuResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetMenuResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/user/auths/{id}',
        ...options
    });
};

/**
 * 删除标签
 */
export const deleteTag = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteTagData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/tags/{id}',
        ...options
    });
};

/**
 * 查询标签详情
 */
export const getTag = <TComposable extends Composable = '$fetch', DefaultT extends GetTagResponse = GetTagResponse>(options: Options<TComposable, GetTagData, GetTagResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetTagResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/tags/{id}',
        ...options
    });
};

/**
 * 删除员工信息
 */
export const deleteStaff = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteStaffData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/staffs/{id}',
        ...options
    });
};

/**
 * 查询员工详情
 */
export const getStaff = <TComposable extends Composable = '$fetch', DefaultT extends GetStaffResponse = GetStaffResponse>(options: Options<TComposable, GetStaffData, GetStaffResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetStaffResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/staffs/{id}',
        ...options
    });
};

/**
 * 员工选择器
 */
export const listStaffPickerItems = <TComposable extends Composable = '$fetch', DefaultT extends ListStaffPickerItemsResponse = ListStaffPickerItemsResponse>(options: Options<TComposable, ListStaffPickerItemsData, ListStaffPickerItemsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListStaffPickerItemsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/staffs/picker',
        ...options
    });
};

/**
 * 查询短视频
 */
export const getShortVideoRecord = <TComposable extends Composable = '$fetch', DefaultT extends GetShortVideoRecordResponse = GetShortVideoRecordResponse>(options: Options<TComposable, GetShortVideoRecordData, GetShortVideoRecordResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetShortVideoRecordResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/short-video/records/{id}',
        ...options
    });
};

/**
 * 查询短视频曝光量详情
 */
export const getShortVideoImpression = <TComposable extends Composable = '$fetch', DefaultT extends GetShortVideoImpressionResponse = GetShortVideoImpressionResponse>(options: Options<TComposable, GetShortVideoImpressionData, GetShortVideoImpressionResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetShortVideoImpressionResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/short-video/impressions/{id}',
        ...options
    });
};

/**
 * 查询短视视频粉丝量详情
 */
export const getShortVideoFans = <TComposable extends Composable = '$fetch', DefaultT extends GetShortVideoFansResponse = GetShortVideoFansResponse>(options: Options<TComposable, GetShortVideoFansData, GetShortVideoFansResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetShortVideoFansResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/short-video/fans/{id}',
        ...options
    });
};

/**
 * 查询短视频账号详情
 */
export const getShortVideoAccount = <TComposable extends Composable = '$fetch', DefaultT extends GetShortVideoAccountResponse = GetShortVideoAccountResponse>(options: Options<TComposable, GetShortVideoAccountData, GetShortVideoAccountResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetShortVideoAccountResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/short-video/accounts/{id}',
        ...options
    });
};

/**
 * 查询角色详情
 */
export const getRole = <TComposable extends Composable = '$fetch', DefaultT extends GetRoleResponse = GetRoleResponse>(options: Options<TComposable, GetRoleData, GetRoleResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetRoleResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/roles/{id}',
        ...options
    });
};

/**
 * 获取角色选择器
 */
export const listRolePickerItems = <TComposable extends Composable = '$fetch', DefaultT extends ListRolePickerItemsResponse = ListRolePickerItemsResponse>(options: Options<TComposable, ListRolePickerItemsData, ListRolePickerItemsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListRolePickerItemsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/roles/picker',
        ...options
    });
};

/**
 * 获取权限选择器
 */
export const listPermissionPickerItems = <TComposable extends Composable = '$fetch', DefaultT extends ListPermissionPickerItemsResponse = ListPermissionPickerItemsResponse>(options: Options<TComposable, ListPermissionPickerItemsData, ListPermissionPickerItemsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListPermissionPickerItemsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/roles/permissions/picker',
        ...options
    });
};

/**
 * 查询举报详情
 */
export const getReportByAdmin = <TComposable extends Composable = '$fetch', DefaultT extends GetReportByAdminResponse = GetReportByAdminResponse>(options: Options<TComposable, GetReportByAdminData, GetReportByAdminResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetReportByAdminResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/reports/{id}',
        ...options
    });
};

/**
 * 查询推广员详情
 */
export const getAgentProfile = <TComposable extends Composable = '$fetch', DefaultT extends GetAgentProfileResponse = GetAgentProfileResponse>(options: Options<TComposable, GetAgentProfileData, GetAgentProfileResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetAgentProfileResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/promoters/{id}',
        ...options
    });
};

/**
 * 删除支付记录信息
 */
export const deletePaymentRecordById = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeletePaymentRecordByIdData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/payment-records/{id}',
        ...options
    });
};

/**
 * 查询支付记录详情
 */
export const getPaymentRecord = <TComposable extends Composable = '$fetch', DefaultT extends GetPaymentRecordResponse = GetPaymentRecordResponse>(options: Options<TComposable, GetPaymentRecordData, GetPaymentRecordResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetPaymentRecordResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/payment-records/{id}',
        ...options
    });
};

/**
 * 删除订单
 */
export const deleteOrder = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteOrderData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/orders/{id}',
        ...options
    });
};

/**
 * 查询资产订单表详情
 */
export const getOrder = <TComposable extends Composable = '$fetch', DefaultT extends GetOrderResponse = GetOrderResponse>(options: Options<TComposable, GetOrderData, GetOrderResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetOrderResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/orders/{id}',
        ...options
    });
};

/**
 * 根据id删除菜单
 */
export const deleteMenuById = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteMenuByIdData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/menus/{id}',
        ...options
    });
};

/**
 * 查询菜单详情
 */
export const getMenu1 = <TComposable extends Composable = '$fetch', DefaultT extends GetMenu1Response = GetMenu1Response>(options: Options<TComposable, GetMenu1Data, GetMenu1Response, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetMenu1Response | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/menus/{id}',
        ...options
    });
};

/**
 * 获取菜单树
 */
export const listMenuPickerItem = <TComposable extends Composable = '$fetch', DefaultT extends ListMenuPickerItemResponse = ListMenuPickerItemResponse>(options: Options<TComposable, ListMenuPickerItemData, ListMenuPickerItemResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListMenuPickerItemResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/menus/picker',
        ...options
    });
};

/**
 * 获取有权限的菜单
 */
export const listMenuByPermissions = <TComposable extends Composable = '$fetch', DefaultT extends ListMenuByPermissionsResponse = ListMenuByPermissionsResponse>(options: Options<TComposable, ListMenuByPermissionsData, ListMenuByPermissionsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListMenuByPermissionsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/menus/authorized',
        ...options
    });
};

/**
 * 查询订阅表详情
 */
export const getSubscription = <TComposable extends Composable = '$fetch', DefaultT extends GetSubscriptionResponse = GetSubscriptionResponse>(options: Options<TComposable, GetSubscriptionData, GetSubscriptionResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetSubscriptionResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/member/subscriptions/{id}',
        ...options
    });
};

/**
 * 查询会员操作日志详情
 */
export const getOperationLog = <TComposable extends Composable = '$fetch', DefaultT extends GetOperationLogResponse = GetOperationLogResponse>(options: Options<TComposable, GetOperationLogData, GetOperationLogResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetOperationLogResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/logs/operation/{id}',
        ...options
    });
};

/**
 * 查询关键词详情
 */
export const getKeyword = <TComposable extends Composable = '$fetch', DefaultT extends GetKeywordResponse = GetKeywordResponse>(options: Options<TComposable, GetKeywordData, GetKeywordResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetKeywordResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/keywords/{id}',
        ...options
    });
};

/**
 * 查询关键词使用记录详情
 */
export const getKeywordUsage = <TComposable extends Composable = '$fetch', DefaultT extends GetKeywordUsageResponse = GetKeywordUsageResponse>(options: Options<TComposable, GetKeywordUsageData, GetKeywordUsageResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetKeywordUsageResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/keyword/usages/{id}',
        ...options
    });
};

/**
 * 查询关键字黑名单详情
 */
export const getKeywordBlacklist = <TComposable extends Composable = '$fetch', DefaultT extends GetKeywordBlacklistResponse = GetKeywordBlacklistResponse>(options: Options<TComposable, GetKeywordBlacklistData, GetKeywordBlacklistResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetKeywordBlacklistResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/keyword/blacklist/{id}',
        ...options
    });
};

/**
 * 查询关键词原始内容详情
 */
export const getRawContent = <TComposable extends Composable = '$fetch', DefaultT extends GetRawContentResponse = GetRawContentResponse>(options: Options<TComposable, GetRawContentData, GetRawContentResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetRawContentResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/contents/{id}',
        ...options
    });
};

/**
 * 查询采集器详情
 */
export const getCollector = <TComposable extends Composable = '$fetch', DefaultT extends GetCollectorResponse = GetCollectorResponse>(options: Options<TComposable, GetCollectorData, GetCollectorResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetCollectorResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/kc/collectors/{id}',
        ...options
    });
};

/**
 * 删除展会信息信息
 */
export const deleteExhibitionById = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteExhibitionByIdData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/exhibitions/{id}',
        ...options
    });
};

/**
 * 查询展会信息详情
 */
export const getExhibition = <TComposable extends Composable = '$fetch', DefaultT extends GetExhibitionResponse = GetExhibitionResponse>(options: Options<TComposable, GetExhibitionData, GetExhibitionResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetExhibitionResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/exhibitions/{id}',
        ...options
    });
};

/**
 * 查询内容详情
 */
export const getContent = <TComposable extends Composable = '$fetch', DefaultT extends GetContentResponse = GetContentResponse>(options: Options<TComposable, GetContentData, GetContentResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetContentResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/contents/{id}',
        ...options
    });
};

/**
 * 查询树结构配置项详情
 */
export const getTreeOption = <TComposable extends Composable = '$fetch', DefaultT extends GetTreeOptionResponse = GetTreeOptionResponse>(options: Options<TComposable, GetTreeOptionData, GetTreeOptionResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetTreeOptionResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/config/options/{id}',
        ...options
    });
};

/**
 * 查询佣金结算详情
 */
export const getCommissionSettlement = <TComposable extends Composable = '$fetch', DefaultT extends GetCommissionSettlementResponse = GetCommissionSettlementResponse>(options: Options<TComposable, GetCommissionSettlementData, GetCommissionSettlementResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetCommissionSettlementResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/commission/settlements/{id}',
        ...options
    });
};

/**
 * 查询佣金记录详情
 */
export const getCommissionRecord = <TComposable extends Composable = '$fetch', DefaultT extends GetCommissionRecordResponse = GetCommissionRecordResponse>(options: Options<TComposable, GetCommissionRecordData, GetCommissionRecordResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetCommissionRecordResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/commission/records/{id}',
        ...options
    });
};

/**
 * 查询内容评论详情
 */
export const getComment = <TComposable extends Composable = '$fetch', DefaultT extends GetCommentResponse = GetCommentResponse>(options: Options<TComposable, GetCommentData, GetCommentResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetCommentResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/comments/{id}',
        ...options
    });
};

/**
 * 删除链接
 */
export const deleteLink = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteLinkData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/links/{id}',
        ...options
    });
};

/**
 * 获取链接详情
 */
export const getLinkDetails = <TComposable extends Composable = '$fetch', DefaultT extends GetLinkDetailsResponse = GetLinkDetailsResponse>(options: Options<TComposable, GetLinkDetailsData, GetLinkDetailsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetLinkDetailsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/links/{id}',
        ...options
    });
};

/**
 * 删除文章
 */
export const deleteArticleByAdmin = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteArticleByAdminData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/articles/{id}',
        ...options
    });
};

/**
 * 获取文章详情
 */
export const getArticleDetailsByAdmin = <TComposable extends Composable = '$fetch', DefaultT extends GetArticleDetailsByAdminResponse = GetArticleDetailsByAdminResponse>(options: Options<TComposable, GetArticleDetailsByAdminData, GetArticleDetailsByAdminResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetArticleDetailsByAdminResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/articles/{id}',
        ...options
    });
};

/**
 * 删除文章分类信息
 */
export const deleteArticleCategoryById = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteArticleCategoryByIdData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/article-categories/{id}',
        ...options
    });
};

/**
 * 查询文章分类详情
 */
export const getArticleCategory = <TComposable extends Composable = '$fetch', DefaultT extends GetArticleCategoryResponse = GetArticleCategoryResponse>(options: Options<TComposable, GetArticleCategoryData, GetArticleCategoryResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetArticleCategoryResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/article-categories/{id}',
        ...options
    });
};

/**
 * 查询文章类目树
 */
export const listCategoryPickerItems = <TComposable extends Composable = '$fetch', DefaultT extends ListCategoryPickerItemsResponse = ListCategoryPickerItemsResponse>(options: Options<TComposable, ListCategoryPickerItemsData, ListCategoryPickerItemsResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, ListCategoryPickerItemsResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/cms/article-categories/picker-items',
        ...options
    });
};

/**
 * 删除资产权益表信息
 */
export const deleteBenefit = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteBenefitData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/benefits/{id}',
        ...options
    });
};

/**
 * 查询资产权益表详情
 */
export const getBenefit = <TComposable extends Composable = '$fetch', DefaultT extends GetBenefitResponse = GetBenefitResponse>(options: Options<TComposable, GetBenefitData, GetBenefitResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetBenefitResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/benefits/{id}',
        ...options
    });
};

/**
 * 查询资产权益表参考数据
 */
export const getBenefitReference = <TComposable extends Composable = '$fetch', DefaultT extends GetBenefitReferenceResponse = GetBenefitReferenceResponse>(options: Options<TComposable, GetBenefitReferenceData, GetBenefitReferenceResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetBenefitReferenceResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/benefits/reference',
        ...options
    });
};

/**
 * 删除产品
 */
export const deleteProduct = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteProductData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/asset-products/{id}',
        ...options
    });
};

/**
 * 查询产品详情
 */
export const getProduct = <TComposable extends Composable = '$fetch', DefaultT extends GetProductResponse = GetProductResponse>(options: Options<TComposable, GetProductData, GetProductResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetProductResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/asset-products/{id}',
        ...options
    });
};

/**
 * 查询应用版本详情
 */
export const getAppVersion = <TComposable extends Composable = '$fetch', DefaultT extends GetAppVersionResponse = GetAppVersionResponse>(options: Options<TComposable, GetAppVersionData, GetAppVersionResponse, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetAppVersionResponse | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/app/versions/{id}',
        ...options
    });
};

/**
 * 查询代理商详情
 */
export const getAgentProfile1 = <TComposable extends Composable = '$fetch', DefaultT extends GetAgentProfile1Response = GetAgentProfile1Response>(options: Options<TComposable, GetAgentProfile1Data, GetAgentProfile1Response, DefaultT>) => {
    return (options.client ?? client).get<TComposable, GetAgentProfile1Response | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/agents/{id}',
        ...options
    });
};

/**
 * 会员权益设备解绑
 */
export const unbindBenefitDevice = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, UnbindBenefitDeviceData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/vip/members/benefits/devices/unbind',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 删除推送记录
 */
export const deletePushRecord = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeletePushRecordData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/vip/marketing/push-record/{id}',
        ...options
    });
};

/**
 * 删除标签
 */
export const deleteTagByFrontend = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteTagByFrontendData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/tags/{id}',
        ...options
    });
};

/**
 * 根据标签名称删除标签
 */
export const deleteTagNameByFrontend = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteTagNameByFrontendData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/tags/names/{tag}',
        ...options
    });
};

/**
 * 删除快捷回复
 */
export const deleteQuickReply = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteQuickReplyData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/msg/messaging/quick-replies/{id}',
        ...options
    });
};

/**
 * 删除会话
 */
export const deletePrivateConversation = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeletePrivateConversationData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/msg/messaging/private/conversations/{id}',
        ...options
    });
};

/**
 * 撤回消息
 */
export const revokeMessage = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, RevokeMessageData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/msg/messaging/chat-message/{id}/revoked',
        ...options
    });
};

/**
 * 删除短视频账号
 */
export const deleteShortVideoAccount = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteShortVideoAccountData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/matrix/accounts/{id}',
        ...options
    });
};

/**
 * 删除线索管理记录
 */
export const deleteClueSearchHistory = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteClueSearchHistoryData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/crm/clues/search-histories/{id}',
        ...options
    });
};

/**
 * 删除内容
 */
export const delete_ = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/contents/{contentId}',
        ...options
    });
};

/**
 * 删除评论
 */
export const delete1 = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, Delete1Data, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/comments/{id}',
        ...options
    });
};

/**
 * 根据标签名称删除标签
 */
export const deleteTagName = <TComposable extends Composable = '$fetch', DefaultT = undefined>(options: Options<TComposable, DeleteTagNameData, unknown, DefaultT>) => {
    return (options.client ?? client).delete<TComposable, unknown | DefaultT, unknown, DefaultT>({
        url: '/api/v1/admin/tags/names/{tag}',
        ...options
    });
};
